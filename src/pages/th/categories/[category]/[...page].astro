---
import { type Page } from "astro";

// main layout
import BaseLayout from "@layouts/BaseLayout.astro";

// components
import PostCard from "@components/PostCard/PostCardMultiLink.astro";
import Pagination from "@components/Pagination/Pagination.astro";

// utils
import { getAllPosts, countItems } from "@js/blogUtils";
import { categorify, slugify } from "@js/textUtils";
import { getLocaleFromUrl } from "@js/localeUtils";
import { defaultLocale } from "@config/siteSettings.json";

// generate pagination for tag pages if there are a bunch of posts for a single tag
export async function getStaticPaths({ paginate }) {
  const posts = await getAllPosts("th");

  // get all tags from the posts
  const allCategories = posts.map((post) => post.data.categories).flat();

  // combine tags and count how many times they appear. these are "slugified"
  const countedCategories = countItems(allCategories);

  // pagination returns an array of objects with params and page size
  return Object.entries(countedCategories).flatMap(([category, val]) => {
    // get all posts that have the tag
    const filteredPosts = posts.filter((post) => {
      // make sure to slugify them for comparison
      const slugifiedCategories = post.data.categories.map((category) =>
        slugify(category),
      );
      return slugifiedCategories.includes(category);
    });

    return paginate(filteredPosts, {
      params: { category: category },
      pageSize: 6,
    });
  });
}

const { page } = Astro.props as { page: Page };
const { category } = Astro.params as { category: string };

const formattedCategory = categorify(category);
---

<BaseLayout
  title={`${formattedCategory} - Blog posts`}
  description={`A collection of blog posts about ${formattedCategory}`}
>
  <section class="container">
    <div class="mx-auto max-w-3xl pt-24 md:pt-36">
      <h1 class="h1 text-center">
        Blog Posts about <span class="main-text-gradient"
          >{formattedCategory.toLowerCase()}</span
        >
      </h1>
      <hr
        class="mx-auto mt-4 max-w-[30%] rounded-full border-none bg-primary-600/50 pt-1"
      />
      <div class="mt-10 grid gap-4 md:grid-cols-2">
        {
          page.data.map((post) => (
            <PostCard post={post} showDescription={false} />
          ))
        }
      </div>
    </div>

    <!-- Pagination -->
    <div class="mt-8 flex justify-center">
      <Pagination
        prevUrl={page.url.prev}
        currPage={page.currentPage}
        nextUrl={page.url.next}
        lastPage={page.size}
      />
    </div>
  </section>
</BaseLayout>
